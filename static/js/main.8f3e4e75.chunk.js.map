{"version":3,"sources":["componentes/Formulario.js","helpers/helpers.js","componentes/Header.js","componentes/Mensaje.js","componentes/Resultado.js","componentes/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["Formulario","cantidad","setCantidad","plazo","setPlazo","setTotal","setCargando","useState","err","setErr","onSubmit","e","preventDefault","setTimeout","total","totalCantidad","totalPlazo","calcularTotal","className","type","placeholder","onChange","parseInt","target","value","Header","title","Mensaje","Resultado","toFixed","Spinner","App","componente","cargando","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8f3e4e75.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {calcularTotal} from '../helpers/helpers';\n\n\nconst Formulario= ({cantidad, setCantidad, plazo, setPlazo, setTotal, setCargando})=>{\n\n    const [err, setErr]=useState(false);\n\n    const calcularPrestamo=(e)=>{\n        e.preventDefault();\n\n        if(cantidad === 0 || plazo === '') {\n             setErr(true);\n             return;\n        }\n        setErr(false);\n\n        setCargando(true);\n\n        setTimeout(()=> {\n            const total= calcularTotal(cantidad, plazo);\n            setTotal(total);\n\n            setCargando(false);\n\n        }, 3000);\n\n       \n        \n    }\n\n    return (\n        <div>\n            <form onSubmit={calcularPrestamo}>\n               \n                <div className=\"row\">\n                        <div>\n                            <label>Cantidad Prestamo</label>\n                            <input \n                                className=\"u-full-width\" \n                                type=\"number\" \n                                placeholder=\"Ejemplo: 3000\" \n                                onChange={(e)=> setCantidad(parseInt(e.target.value))}\n                            />\n                        </div>\n                        <div>\n                            <label>Plazo para Pagar</label>\n                            <select \n                                className=\"u-full-width\"\n                                onChange={(e)=> setPlazo(parseInt(e.target.value))}\n                            >\n                                <option value=\"\">Seleccionar</option>\n                                <option value=\"3\">3 meses</option>\n                                <option value=\"6\">6 meses</option>\n                                <option value=\"12\">12 meses</option>\n                                <option value=\"24\">24 meses</option>\n                            </select>\n                        </div>\n                        <div>\n                            <input \n                                type=\"submit\" \n                                value=\"Calcular\" \n                                className=\"button-primary u-full-width\" \n                            />\n                        </div>\n                </div>\n            </form>\n            {(err) ? <p className=\"error\">\"Todos los campos son obligatorios\"</p> : ''}\n            \n        </div>\n    )\n}\n\nexport default Formulario;","export function calcularTotal (cantidad, plazo) {\n    let totalCantidad;\n    if(cantidad<=1000){\n        totalCantidad=cantidad*.25;\n    } else if(cantidad>1000 && cantidad <=5000) {\n        totalCantidad=cantidad *20;\n    }else if(cantidad>5000 && cantidad <=10000) {\n        totalCantidad=cantidad *15;\n    } else {\n        totalCantidad=cantidad*.10;\n    }\n\n    let totalPlazo=0;\n    switch(plazo) {\n        case 3: \n            totalPlazo=cantidad*.05;\n            break;\n        case 6: \n            totalPlazo=cantidad*.10;\n            break;\n        case 12: \n            totalPlazo=cantidad*.15;\n            break;\n        case 24: \n            totalPlazo=cantidad*.20;\n            break;\n        default:\n            break;\n    }\n    return totalPlazo+totalCantidad+cantidad;\n\n}   ","import React from 'react';\n\n\nconst Header= ({title})=>(\n        <h1>{title}</h1>\n)\n\nexport default Header;","import React from 'react';\n\nconst Mensaje=()=> {\n    return (\n        <p>Agrega una cantidad y un plazo para cotizar el total a pagar</p>\n    )\n}\n\nexport default Mensaje;","import React from \"react\";\n\nconst Resultado=({total, plazo, cantidad})=> (\n        <div className=\"u-full-width resultado\">\n            <h2>Resumen</h2>\n            <p>La cantidad solicitada es ${cantidad}</p>\n            <p>A pagar en: {plazo} Meses</p>\n            <p>Pago mensual de: ${(total/plazo).toFixed(2)}</p>\n            <p>Total a pagar: ${(total).toFixed(2)}</p>\n        </div>\n    )\n\n\nexport default Resultado;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner=()=>{\n    return (\n        <div className=\"sk-chase\">\n            <div className=\"sk-chase-dot\"></div>\n            <div className=\"sk-chase-dot\"></div>\n            <div className=\"sk-chase-dot\"></div>\n            <div className=\"sk-chase-dot\"></div>\n            <div className=\"sk-chase-dot\"></div>\n            <div className=\"sk-chase-dot\"></div>\n        </div>\n    )\n}\n\nexport default Spinner;","import React, {useState} from 'react';\nimport Formulario from './componentes/Formulario';\nimport Header from './componentes/Header';\nimport Mensaje from './componentes/Mensaje';\nimport Resultado from './componentes/Resultado';\nimport Spinner from './componentes/Spinner.js';\n\nfunction App() {\n  const [cantidad, setCantidad]=useState(0);\n  const [plazo, setPlazo]=useState('');\n  const [total, setTotal]=useState(0);\n  const [cargando, setCargando]=useState(false);\n\n  let componente;\n  if(cargando) {\n    componente= <Spinner /> \n  } else if(total===0){\n    componente= <Mensaje/>\n  } else {\n    componente= <Resultado \n                  total={total}\n                  plazo={plazo}\n                  cantidad={cantidad}\n                  />\n  }\n\n  return (\n    <div className=\"App\">\n      <Header \n      title=\"Cotizador de prestamos\"/>\n      <div className=\"container\">\n        <Formulario \n        cantidad={cantidad}\n        setCantidad={setCantidad}\n        plazo={plazo}\n        setPlazo={setPlazo}\n        setTotal={setTotal}\n        setCargando={setCargando}\n        />\n        <div className=\"mensajes\">\n         {componente}\n        </div>\n      </div>\n      \n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}